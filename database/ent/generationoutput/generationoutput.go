// Code generated by ent, DO NOT EDIT.

package generationoutput

import (
	"fmt"
	"time"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the generationoutput type in the database.
	Label = "generation_output"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldImagePath holds the string denoting the image_path field in the database.
	FieldImagePath = "image_path"
	// FieldUpscaledImagePath holds the string denoting the upscaled_image_path field in the database.
	FieldUpscaledImagePath = "upscaled_image_path"
	// FieldGalleryStatus holds the string denoting the gallery_status field in the database.
	FieldGalleryStatus = "gallery_status"
	// FieldIsFavorited holds the string denoting the is_favorited field in the database.
	FieldIsFavorited = "is_favorited"
	// FieldHasEmbeddings holds the string denoting the has_embeddings field in the database.
	FieldHasEmbeddings = "has_embeddings"
	// FieldHasEmbeddingsNew holds the string denoting the has_embeddings_new field in the database.
	FieldHasEmbeddingsNew = "has_embeddings_new"
	// FieldIsMigrated holds the string denoting the is_migrated field in the database.
	FieldIsMigrated = "is_migrated"
	// FieldIsPublic holds the string denoting the is_public field in the database.
	FieldIsPublic = "is_public"
	// FieldAestheticRatingScore holds the string denoting the aesthetic_rating_score field in the database.
	FieldAestheticRatingScore = "aesthetic_rating_score"
	// FieldAestheticArtifactScore holds the string denoting the aesthetic_artifact_score field in the database.
	FieldAestheticArtifactScore = "aesthetic_artifact_score"
	// FieldLikeCount holds the string denoting the like_count field in the database.
	FieldLikeCount = "like_count"
	// FieldGenerationID holds the string denoting the generation_id field in the database.
	FieldGenerationID = "generation_id"
	// FieldDeletedAt holds the string denoting the deleted_at field in the database.
	FieldDeletedAt = "deleted_at"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// EdgeGenerations holds the string denoting the generations edge name in mutations.
	EdgeGenerations = "generations"
	// EdgeUpscaleOutputs holds the string denoting the upscale_outputs edge name in mutations.
	EdgeUpscaleOutputs = "upscale_outputs"
	// EdgeGenerationOutputLikes holds the string denoting the generation_output_likes edge name in mutations.
	EdgeGenerationOutputLikes = "generation_output_likes"
	// Table holds the table name of the generationoutput in the database.
	Table = "generation_outputs"
	// GenerationsTable is the table that holds the generations relation/edge.
	GenerationsTable = "generation_outputs"
	// GenerationsInverseTable is the table name for the Generation entity.
	// It exists in this package in order to avoid circular dependency with the "generation" package.
	GenerationsInverseTable = "generations"
	// GenerationsColumn is the table column denoting the generations relation/edge.
	GenerationsColumn = "generation_id"
	// UpscaleOutputsTable is the table that holds the upscale_outputs relation/edge.
	UpscaleOutputsTable = "upscale_outputs"
	// UpscaleOutputsInverseTable is the table name for the UpscaleOutput entity.
	// It exists in this package in order to avoid circular dependency with the "upscaleoutput" package.
	UpscaleOutputsInverseTable = "upscale_outputs"
	// UpscaleOutputsColumn is the table column denoting the upscale_outputs relation/edge.
	UpscaleOutputsColumn = "generation_output_id"
	// GenerationOutputLikesTable is the table that holds the generation_output_likes relation/edge.
	GenerationOutputLikesTable = "generation_output_likes"
	// GenerationOutputLikesInverseTable is the table name for the GenerationOutputLike entity.
	// It exists in this package in order to avoid circular dependency with the "generationoutputlike" package.
	GenerationOutputLikesInverseTable = "generation_output_likes"
	// GenerationOutputLikesColumn is the table column denoting the generation_output_likes relation/edge.
	GenerationOutputLikesColumn = "output_id"
)

// Columns holds all SQL columns for generationoutput fields.
var Columns = []string{
	FieldID,
	FieldImagePath,
	FieldUpscaledImagePath,
	FieldGalleryStatus,
	FieldIsFavorited,
	FieldHasEmbeddings,
	FieldHasEmbeddingsNew,
	FieldIsMigrated,
	FieldIsPublic,
	FieldAestheticRatingScore,
	FieldAestheticArtifactScore,
	FieldLikeCount,
	FieldGenerationID,
	FieldDeletedAt,
	FieldCreatedAt,
	FieldUpdatedAt,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultIsFavorited holds the default value on creation for the "is_favorited" field.
	DefaultIsFavorited bool
	// DefaultHasEmbeddings holds the default value on creation for the "has_embeddings" field.
	DefaultHasEmbeddings bool
	// DefaultHasEmbeddingsNew holds the default value on creation for the "has_embeddings_new" field.
	DefaultHasEmbeddingsNew bool
	// DefaultIsMigrated holds the default value on creation for the "is_migrated" field.
	DefaultIsMigrated bool
	// DefaultIsPublic holds the default value on creation for the "is_public" field.
	DefaultIsPublic bool
	// DefaultAestheticRatingScore holds the default value on creation for the "aesthetic_rating_score" field.
	DefaultAestheticRatingScore float32
	// DefaultAestheticArtifactScore holds the default value on creation for the "aesthetic_artifact_score" field.
	DefaultAestheticArtifactScore float32
	// DefaultLikeCount holds the default value on creation for the "like_count" field.
	DefaultLikeCount int
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)

// GalleryStatus defines the type for the "gallery_status" enum field.
type GalleryStatus string

// GalleryStatusNotSubmitted is the default value of the GalleryStatus enum.
const DefaultGalleryStatus = GalleryStatusNotSubmitted

// GalleryStatus values.
const (
	GalleryStatusNotSubmitted       GalleryStatus = "not_submitted"
	GalleryStatusSubmitted          GalleryStatus = "submitted"
	GalleryStatusApproved           GalleryStatus = "approved"
	GalleryStatusRejected           GalleryStatus = "rejected"
	GalleryStatusWaitingForApproval GalleryStatus = "waiting_for_approval"
)

func (gs GalleryStatus) String() string {
	return string(gs)
}

// GalleryStatusValidator is a validator for the "gallery_status" field enum values. It is called by the builders before save.
func GalleryStatusValidator(gs GalleryStatus) error {
	switch gs {
	case GalleryStatusNotSubmitted, GalleryStatusSubmitted, GalleryStatusApproved, GalleryStatusRejected, GalleryStatusWaitingForApproval:
		return nil
	default:
		return fmt.Errorf("generationoutput: invalid enum value for gallery_status field: %q", gs)
	}
}

// OrderOption defines the ordering options for the GenerationOutput queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByImagePath orders the results by the image_path field.
func ByImagePath(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldImagePath, opts...).ToFunc()
}

// ByUpscaledImagePath orders the results by the upscaled_image_path field.
func ByUpscaledImagePath(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldUpscaledImagePath, opts...).ToFunc()
}

// ByGalleryStatus orders the results by the gallery_status field.
func ByGalleryStatus(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldGalleryStatus, opts...).ToFunc()
}

// ByIsFavorited orders the results by the is_favorited field.
func ByIsFavorited(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldIsFavorited, opts...).ToFunc()
}

// ByHasEmbeddings orders the results by the has_embeddings field.
func ByHasEmbeddings(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldHasEmbeddings, opts...).ToFunc()
}

// ByHasEmbeddingsNew orders the results by the has_embeddings_new field.
func ByHasEmbeddingsNew(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldHasEmbeddingsNew, opts...).ToFunc()
}

// ByIsMigrated orders the results by the is_migrated field.
func ByIsMigrated(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldIsMigrated, opts...).ToFunc()
}

// ByIsPublic orders the results by the is_public field.
func ByIsPublic(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldIsPublic, opts...).ToFunc()
}

// ByAestheticRatingScore orders the results by the aesthetic_rating_score field.
func ByAestheticRatingScore(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldAestheticRatingScore, opts...).ToFunc()
}

// ByAestheticArtifactScore orders the results by the aesthetic_artifact_score field.
func ByAestheticArtifactScore(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldAestheticArtifactScore, opts...).ToFunc()
}

// ByLikeCount orders the results by the like_count field.
func ByLikeCount(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldLikeCount, opts...).ToFunc()
}

// ByGenerationID orders the results by the generation_id field.
func ByGenerationID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldGenerationID, opts...).ToFunc()
}

// ByDeletedAt orders the results by the deleted_at field.
func ByDeletedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldDeletedAt, opts...).ToFunc()
}

// ByCreatedAt orders the results by the created_at field.
func ByCreatedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCreatedAt, opts...).ToFunc()
}

// ByUpdatedAt orders the results by the updated_at field.
func ByUpdatedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldUpdatedAt, opts...).ToFunc()
}

// ByGenerationsField orders the results by generations field.
func ByGenerationsField(field string, opts ...sql.OrderTermOption) OrderOption {
	return func(s *sql.Selector) {
		sqlgraph.OrderByNeighborTerms(s, newGenerationsStep(), sql.OrderByField(field, opts...))
	}
}

// ByUpscaleOutputsField orders the results by upscale_outputs field.
func ByUpscaleOutputsField(field string, opts ...sql.OrderTermOption) OrderOption {
	return func(s *sql.Selector) {
		sqlgraph.OrderByNeighborTerms(s, newUpscaleOutputsStep(), sql.OrderByField(field, opts...))
	}
}

// ByGenerationOutputLikesCount orders the results by generation_output_likes count.
func ByGenerationOutputLikesCount(opts ...sql.OrderTermOption) OrderOption {
	return func(s *sql.Selector) {
		sqlgraph.OrderByNeighborsCount(s, newGenerationOutputLikesStep(), opts...)
	}
}

// ByGenerationOutputLikes orders the results by generation_output_likes terms.
func ByGenerationOutputLikes(term sql.OrderTerm, terms ...sql.OrderTerm) OrderOption {
	return func(s *sql.Selector) {
		sqlgraph.OrderByNeighborTerms(s, newGenerationOutputLikesStep(), append([]sql.OrderTerm{term}, terms...)...)
	}
}
func newGenerationsStep() *sqlgraph.Step {
	return sqlgraph.NewStep(
		sqlgraph.From(Table, FieldID),
		sqlgraph.To(GenerationsInverseTable, FieldID),
		sqlgraph.Edge(sqlgraph.M2O, true, GenerationsTable, GenerationsColumn),
	)
}
func newUpscaleOutputsStep() *sqlgraph.Step {
	return sqlgraph.NewStep(
		sqlgraph.From(Table, FieldID),
		sqlgraph.To(UpscaleOutputsInverseTable, FieldID),
		sqlgraph.Edge(sqlgraph.O2O, false, UpscaleOutputsTable, UpscaleOutputsColumn),
	)
}
func newGenerationOutputLikesStep() *sqlgraph.Step {
	return sqlgraph.NewStep(
		sqlgraph.From(Table, FieldID),
		sqlgraph.To(GenerationOutputLikesInverseTable, FieldID),
		sqlgraph.Edge(sqlgraph.O2M, false, GenerationOutputLikesTable, GenerationOutputLikesColumn),
	)
}
